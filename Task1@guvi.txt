1.*** Differences between HTTP1.1 and HTTP2 ***
 
   *Binary framing layer.
   *Tcp connections.
   *Predecting server request.
   *Compression. 

2.*** HTTP Version History ***

   *HTTP 0.9: The One-Line Protocol.
   *HTTP/1.0: Rapid Growth and Informational RFC.
   *HTTP/1.1: Internet Standard.
   *HTTP/2  : Improving Transport Performance.

3.*** Differences between Browser js vs Node js ***

   Node js *Node doesn't have a predefined "window". 
           *Location object is related to a particular url.
           *Node doesn't have "document" object also, cause it never have to render anything in a page.
           *Node has "global", which is a predefined global object. It contains several functions that are not available in browsers.
           *In Node everything is a module. You must keep your code inside a module.
           *Node processes request object
           
   Browser *Window is a predefined global object which has functions and attributes.
           *Location is another predefined object in browsers, that has all the information about the url we have loaded.
           *"Document" which is also another predefined global variable in browsers, has the html which is rendered.
           *Browsers may have an object named "global", but it will be the exact one as "window".
           *Moduling is not mandatory in client side JavaScript, i.e. in browsers.
           *Browsers processes response objects.

4. *** What happens when you type URL in the browser? ***
 
         Step1 - You type "URL" into the address bar of your browser.

         Step2 - The browser checks the cache for a DNS record to find the corresponding IP address of the "URL".
                 * First it checks the browser cache and then followed by OS,Router and ISP cache.
        
         Step3 - If the requested "URL" is not in the cache, ISPâ€™s DNS server initiates a DNS query to find the IP address of the server that hosts the "URL".

         Step4 - The browser initiates a TCP connection with the server.

         Step5 - The browser sends an HTTP request to the webserver.

         Step6 - The server handles the request and sends back a response.

         Step7 - The server sends out an HTTP response.

         Step8 - The browser displays the HTML content.
 
5. *** Methods to deep copy in JavaScript ***

       *lodash   _.clone()

       *Ramda    R.clone()

       *JSON.parse()
        
       *JSON.stringify()

       *rfdc (really fast deep clone)

   










    